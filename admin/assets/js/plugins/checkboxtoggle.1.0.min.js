!function(e){"function"==typeof define&&define.amd?define([jquery],e):e(jQuery)}(function(e){function o(o,c){this.obj=e(o),this.o=e.extend({},e.fn[t].defaults,c),this.init()}var t="checkboxToggle";o.prototype={init:function(){var o=this,t=null,c="[type=checkbox]:not(:disabled)";o.obj.on("click touchstart",c+", "+o.o.trigger,function(n){var l=""==o.o.exclude||" "==o.o.exclude?"xxxx, "+o.o.trigger:o.o.exclude+", "+o.o.trigger,d=o.obj.find(o.o.trigger),h=o.obj.find(c).not(o.o.exclude),a=e(this).attr("data-checkboxtoggle-only"),f=function(){return o.obj.find(c+":checked").not(l).length},r=function(){return o.obj.find(c).not(l).length==f()};if(e(this).is(o.o.trigger))"select"==a?(h.prop("checked",!0),o.obj.find('[data-checkboxtoggle-only="select"]').prop("checked",!0).end().find('[data-checkboxtoggle-only="unselect"]').prop("checked",!1)):"unselect"==a?(h.prop("checked",!1),o.obj.find('[data-checkboxtoggle-only="unselect"]').prop("checked",!0)):r()?(h.prop("checked",!1),o.obj.find('[data-checkboxtoggle-only="unselect"]').prop("checked",!0)):(h.prop("checked",!0),o.obj.find('[data-checkboxtoggle-only="select"]').prop("checked",!0).end().find('[data-checkboxtoggle-only="unselect"]').prop("checked",!1)),"function"==typeof o.o.onToggle&&o.o.onToggle.call(this,{item:e(this),allChecked:r(),totalChecked:f()}),e(this).is("a")&&n.preventDefault();else if(!e(this).is(o.o.exclude)){if(t||(t=this),o.o.allowShiftSelect&&n.shiftKey){var g=h.index(e(this)),s=h.index(t);for(i=Math.min(g,s);i<=Math.max(g,s);i++)h.eq(g).is(":checked")?h.eq(i).prop("checked",!0):h.eq(i).prop("checked",!1),"function"==typeof o.o.onToggle&&o.o.onToggle.call(this,{item:h.eq(i),allChecked:r(),totalChecked:f()});t=e(this)}r()?d.not('[data-checkboxtoggle-only="unselect"]').prop("checked",!0):d.prop("checked",!1),0==f()&&o.obj.find('[data-checkboxtoggle-only="unselect"]').prop("checked",!0),"function"==typeof o.o.onSelect&&o.o.onSelect.call(this,{item:e(this),allChecked:r(),totalChecked:f()})}})},update:function(){},destroy:function(){e.removeData(this.obj,this.pluginName)}},e.fn[t]=function(c){return this.each(function(){var n=e(this),i=n.data(t),l="object"==typeof c&&c;i||n.data(t,i=new o(this,l)),"string"==typeof c&&i[c]()})},e.fn[t].defaults={trigger:".checkbox-master",exclude:"",allowShiftSelect:!0,onToggle:function(e){},onSelect:function(e){}}});
//# sourceMappingURL=maps/checkboxtoggle.1.0.min.js.map
