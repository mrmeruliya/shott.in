/*!
 *
 * Vanilla-DataTables
 * Copyright (c) 2015-2017 Karl Saunders (http://mobiuswebdesign.co.uk)
 * Licensed under MIT (http://www.opensource.org/licenses/mit-license.php)
 *
 * Version: 1.1.9
 *
 */
! function(a, b) {
    var c = "DataTable";
    "function" == typeof define && define.amd ? define([], b(c)) : "object" == typeof exports ? module.exports = b(c) : a[c] = b(c)
}(this, function(a) {
    "use strict";

    function n(a, c) {
        var d = {
            perPage: 10,
            perPageSelect: [5, 10, 15, 20, 25],
            sortable: !0,
            searchable: !0,
            nextPrev: !0,
            firstLast: !1,
            prevText: "&lsaquo;",
            nextText: "&rsaquo;",
            firstText: "&laquo;",
            lastText: "&raquo;",
            truncatePager: !0,
            pagerDelta: 2,
            fixedColumns: !0,
            fixedHeight: !1,
            header: !0,
            footer: !1,
            labels: {
                placeholder: "Search...",
                perPage: "{select} entries per page",
                noRows: "No entries found",
                info: "Showing {start} to {end} of {rows} entries"
            },
            layout: {
                top: "{select}{search}",
                bottom: "{info}{pager}"
            }
        };
        if (this.initialized = !1, this.options = b.extend(d, c), !a) throw new Error("The plugin requires a table as the first parameter");
        if ("string" == typeof a) {
            var e = a;
            if (!(a = document.querySelector(a))) throw new Error("The element '" + e + "' can not be found.")
        }
        if ("table" !== a.tagName.toLowerCase()) throw new Error("The selected element is not a table.");
        if (this.options.header || (this.options.sortable = !1), null === a.tHead && (!this.options.data || this.options.data && !this.options.data.headings) && (this.options.sortable = !1), !a.tBodies.length) {
            if (!this.options.data) throw new Error("You don't seem to have a tbody in your table.");
            if (!this.options.data.rows) throw new Error("You seem to be using the data option, but you've not defined any rows.")
        }
        if (a.tBodies.length && !a.tBodies[0].rows.length) {
            if (!this.options.data) throw new Error("You don't seem to have any rows in your table.");
            if (!this.options.data.rows) throw new Error("You seem to be using the data option, but you've not defined any rows.")
        }
        this.table = a, this.init()
    }
    var b = {
            extend: function(a, c) {
                var d;
                for (d in c) c.hasOwnProperty(d) && ("[object Object]" === Object.prototype.toString.call(a[d]) ? b.extend(a[d], c[d]) : a[d] = c[d]);
                return a
            },
            each: function(a, b, c) {
                if ("[object Object]" === Object.prototype.toString.call(a))
                    for (var d in a) Object.prototype.hasOwnProperty.call(a, d) && b.call(c, d, a[d], a);
                else
                    for (var e = 0, f = a.length; e < f; e++) b.call(c, e, a[e], a)
            },
            createElement: function(a, b) {
                var c = document,
                    d = c.createElement(a);
                if (b && "object" == typeof b) {
                    var e;
                    for (e in b) "html" === e ? d.innerHTML = b[e] : "text" === e ? d.appendChild(c.createTextNode(b[e])) : d.setAttribute(e, b[e])
                }
                return d
            },
            createFragment: function() {
                return document.createDocumentFragment()
            },
            hasClass: function(a, b) {
                return a.classList ? a.classList.contains(b) : !!a.className && !!a.className.match(new RegExp("(\\s|^)" + b + "(\\s|$)"))
            },
            addClass: function(a, c) {
                b.hasClass(a, c) || (a.classList ? a.classList.add(c) : a.className = a.className.trim() + " " + c)
            },
            removeClass: function(a, c) {
                b.hasClass(a, c) && (a.classList ? a.classList.remove(c) : a.className = a.className.replace(new RegExp("(^|\\s)" + c.split(" ").join("|") + "(\\s|$)", "gi"), " "))
            },
            append: function(a, b) {
                return a && b && a.appendChild(b)
            },
            on: function(a, b, c, d) {
                a.addEventListener(b, function(a) {
                    c.call(d || this, a)
                }, !1)
            },
            isObject: function(a) {
                return "[object Object]" === Object.prototype.toString.call(a)
            },
            isArray: function(a) {
                return "[object Array]" === Object.prototype.toString.call(a)
            },
            isInt: function(a) {
                return !isNaN(a) && function(a) {
                    return (a || 0) === a
                }(parseFloat(a))
            },
            getBoundingRect: function(a) {
                var b = window,
                    c = document,
                    d = c.body,
                    e = a.getBoundingClientRect(),
                    f = void 0 !== b.pageXOffset ? b.pageXOffset : (c.documentElement || d.parentNode || d).scrollLeft,
                    g = void 0 !== b.pageYOffset ? b.pageYOffset : (c.documentElement || d.parentNode || d).scrollTop;
                return {
                    bottom: e.bottom + g,
                    height: e.height,
                    left: e.left + f,
                    right: e.right + f,
                    top: e.top + g,
                    width: e.width
                }
            },
            preventDefault: function(a) {
                if (a = a || window.event, a.preventDefault) return a.preventDefault()
            },
            includes: function(a, b) {
                return a.indexOf(b) > -1
            },
            button: function(a, c, d) {
                return b.createElement("li", {
                    class: a,
                    html: '<a href="#" data-page="' + c + '">' + d + "</a>"
                })
            },
            flush: function(a, c) {
                if (a instanceof NodeList) b.each(a, function(a, d) {
                    b.flush(d, c)
                });
                else if (c)
                    for (; a.hasChildNodes();) a.removeChild(a.firstChild);
                else a.innerHTML = ""
            }
        },
        c = function() {
            var a = this.options,
                c = "";
            if (m.mixin(this), a.data && l.call(this), this.tbody = this.table.tBodies[0], this.tHead = this.table.tHead, this.tFoot = this.table.tFoot, !this.tHead) {
                var f = b.createElement("thead"),
                    g = b.createElement("tr");
                b.each(this.tbody.rows[0].cells, function(a, c) {
                    b.append(g, b.createElement("th"))
                }), b.append(f, g), this.tHead = f
            }
            if (a.header || this.tHead && this.table.removeChild(this.table.tHead), a.footer ? this.tHead && !this.tFoot && (this.tFoot = b.createElement("tfoot", {
                    html: this.tHead.innerHTML
                }), this.table.appendChild(this.tFoot)) : this.tFoot && this.table.removeChild(this.table.tFoot), this.wrapper = b.createElement("div", {
                    class: "dataTable-wrapper"
                }), c += "<div class='dataTable-top'>", c += a.layout.top, c += "</div>", c += "<div class='dataTable-container' style='height:100%;'></div>", c += "<div class='dataTable-bottom'>", c += a.layout.bottom, c += "</div>", c = c.replace("{info}", "<div class='dataTable-info'></div>"), a.perPageSelect) {
                var h = "<div class='dataTable-dropdown'><label>";
                h += a.labels.perPage, h += "</label></div>";
                var i = b.createElement("select", {
                    class: "dataTable-selector"
                });
                b.each(a.perPageSelect, function(b, c) {
                    var d = c === a.perPage,
                        e = new Option(c, c, d, d);
                    i.add(e)
                }), h = h.replace("{select}", i.outerHTML), c = c.replace("{select}", h)
            } else c = c.replace("{select}", "");
            if (a.searchable) {
                var k = "<div class='dataTable-search'><input class='dataTable-input' placeholder='" + a.labels.placeholder + "' type='text'></div>";
                c = c.replace("{search}", k)
            } else c = c.replace("{search}", "");
            var n = this.tHead.rows[0].cells;
            b.each(n, function(c, d) {
                if (d.idx = c, a.sortable) {
                    var e = b.createElement("a", {
                        href: "#",
                        class: "dataTable-sorter",
                        html: d.innerHTML
                    });
                    d.innerHTML = "", b.append(d, e)
                }
            }), b.addClass(this.table, "dataTable-table");
            var o = b.createElement("div", {
                    class: "dataTable-pagination"
                }),
                p = b.createElement("ul");
            if (b.append(o, p), c = c.replace(/\{pager\}/g, o.outerHTML), this.wrapper.innerHTML = c, this.container = this.wrapper.querySelector(".dataTable-container"), this.paginators = this.wrapper.querySelectorAll(".dataTable-pagination"), this.label = this.wrapper.querySelector(".dataTable-info"), this.table.parentNode.replaceChild(this.wrapper, this.table), this.container.appendChild(this.table), this.rect = b.getBoundingRect(this.table), this.rows = Array.prototype.slice.call(this.tbody.rows), this.update(), a.fixedHeight && j.call(this), a.fixedColumns) {
                var q, r = !1;
                if (this.table.tHead) q = this.table.tHead.rows[0].cells, b.each(q, function(a, c) {
                    var d = b.getBoundingRect(c),
                        e = d.width / this.rect.width * 100;
                    c.style.width = e + "%"
                }, this);
                else {
                    q = [], r = b.createElement("thead");
                    var s = b.createElement("tr"),
                        t = this.table.tBodies[0].rows[0].cells;
                    b.each(t, function(a, c) {
                        var d = b.createElement("th");
                        s.appendChild(d), q.push(d)
                    }), r.appendChild(s), this.table.insertBefore(r, this.table.tBodies[0]);
                    var u = [];
                    b.each(q, function(a, c) {
                        var d = b.getBoundingRect(c),
                            e = d.width / this.rect.width * 100;
                        u.push(e)
                    }, this), b.each(this.rows, function(a, c) {
                        b.each(c.cells, function(a, b) {
                            b.style.width = u[a] + "%"
                        })
                    }), this.table.removeChild(r)
                }
            }
            d.call(this), e.call(this)
        },
        d = function() {
            var a = this.options;
            a.header || b.addClass(this.wrapper, "no-header"), a.footer || b.addClass(this.wrapper, "no-footer"), a.sortable && b.addClass(this.wrapper, "sortable"), a.searchable && b.addClass(this.wrapper, "searchable"), a.fixedHeight && b.addClass(this.wrapper, "fixed-height"), a.fixedColumns && b.addClass(this.wrapper, "fixed-columns")
        },
        e = function() {
            var a = this,
                c = a.options;
            if (c.perPageSelect) {
                var d = a.wrapper.querySelector(".dataTable-selector");
                d && b.on(d, "change", function(b) {
                    c.perPage = parseInt(this.value, 10), a.update(), c.fixedHeight && j.call(a), a.emit("datatable.perpage")
                })
            }
            c.searchable && (a.input = a.wrapper.querySelector(".dataTable-input"), a.input && b.on(a.input, "keyup", function(b) {
                a.search(this.value)
            })), b.on(a.wrapper, "click", function(c) {
                var d = c.target;
                "a" === d.nodeName.toLowerCase() && d.hasAttribute("data-page") && (b.preventDefault(c), a.page(d.getAttribute("data-page")))
            }), c.sortable && b.on(a.tHead, "click", function(c) {
                c = c || window.event;
                var d = c.target;
                "a" === d.nodeName.toLowerCase() && b.hasClass(d, "dataTable-sorter") && (b.preventDefault(c), a.sortColumn(d.parentNode.idx + 1))
            })
        },
        f = function() {
            var a = this.options.perPage,
                b = this.searching ? this.searchData : this.rows;
            this.pages = b.map(function(c, d) {
                return d % a == 0 ? b.slice(d, d + a) : null
            }).filter(function(a) {
                return a
            }), this.totalPages = this.lastPage = this.pages.length
        },
        g = function() {
            if (this.totalPages) {
                this.currentPage > this.totalPages && (this.currentPage = 1);
                var a = this.currentPage - 1,
                    c = b.createFragment();
                switch (b.each(this.pages[a], function(a, d) {
                    b.append(c, d)
                }), this.clear(c), this.onFirstPage = !1, this.onLastPage = !1, this.currentPage) {
                    case 1:
                        this.onFirstPage = !0;
                        break;
                    case this.lastPage:
                        this.onLastPage = !0
                }
            }
            var g, d = 0,
                e = 0,
                f = 0;
            if (this.totalPages && (d = this.currentPage - 1, e = d * this.options.perPage, f = e + this.pages[d].length, e += 1, g = this.searching ? this.searchData.length : this.rows.length), this.label && this.options.labels.info.length) {
                var h = this.options.labels.info.replace("{start}", e).replace("{end}", f).replace("{page}", this.currentPage).replace("{pages}", this.totalPages).replace("{rows}", g);
                this.label.innerHTML = g ? h : ""
            }
            this.options.fixedHeight && 1 == this.currentPage && j.call(this)
        },
        h = function() {
            if (b.flush(this.paginators, this.isIE), !(this.totalPages <= 1)) {
                var a = "pager",
                    c = b.createFragment(),
                    d = this.onFirstPage ? 1 : this.currentPage - 1,
                    e = this.onlastPage ? this.totalPages : this.currentPage + 1;
                this.options.firstLast && b.append(c, b.button(a, 1, this.options.firstText)), this.options.nextPrev && b.append(c, b.button(a, d, this.options.prevText));
                var f = this.links;
                this.options.truncatePager && (f = k(this.links, this.currentPage, this.pages.length, this.options.pagerDelta)), b.addClass(this.links[this.currentPage - 1], "active"), b.each(f, function(a, d) {
                    b.removeClass(d, "active"), b.append(c, d)
                }), b.addClass(this.links[this.currentPage - 1], "active"), this.options.nextPrev && b.append(c, b.button(a, e, this.options.nextText)), this.options.firstLast && b.append(c, b.button(a, this.totalPages, this.options.lastText)), b.each(this.paginators, function(a, d) {
                    b.append(d, c.cloneNode(!0))
                })
            }
        },
        i = function(a, b) {
            var c, d;
            1 === b ? (c = 0, d = a.length) : -1 === b && (c = a.length - 1, d = -1);
            for (var e = !0; e;) {
                e = !1;
                for (var f = c; f != d; f += b)
                    if (a[f + b] && a[f].value > a[f + b].value) {
                        var g = a[f],
                            h = a[f + b],
                            i = g;
                        a[f] = h, a[f + b] = i, e = !0
                    }
            }
            return a
        },
        j = function() {
            this.container.style.height = null, this.rect = b.getBoundingRect(this.container), this.container.style.height = this.rect.height + "px"
        },
        k = function(a, c, d, e) {
            e = e || 2;
            var f, g = 2 * e,
                h = c - e,
                i = c + e,
                j = [],
                k = [];
            c < 4 - e + g ? i = 3 + g : c > d - (3 - e + g) && (h = d - (2 + g));
            for (var l = 1; l <= d; l++)
                if (1 == l || l == d || l >= h && l <= i) {
                    var m = a[l - 1];
                    b.removeClass(m, "active"), j.push(m)
                } return b.each(j, function(c, d) {
                var e = d.children[0].getAttribute("data-page");
                if (f) {
                    var g = f.children[0].getAttribute("data-page");
                    if (e - g == 2) k.push(a[g]);
                    else if (e - g != 1) {
                        var h = b.createElement("li", {
                            class: "ellipsis",
                            html: '<a href="#">&hellip;</a>'
                        });
                        k.push(h)
                    }
                }
                k.push(d), f = d
            }), k
        },
        l = function(a) {
            var c = !1,
                d = !1;
            if (a = a || this.options.data, a.headings) {
                c = b.createElement("thead");
                var e = b.createElement("tr");
                b.each(a.headings, function(a, c) {
                    var d = b.createElement("th", {
                        html: c
                    });
                    e.appendChild(d)
                }), c.appendChild(e)
            }
            a.rows && (d = b.createElement("tbody"), b.each(a.rows, function(c, e) {
                if (a.headings && a.headings.length !== e.length) throw new Error("The number of rows do not match the number of headings.");
                var f = b.createElement("tr");
                b.each(e, function(a, c) {
                    var d = b.createElement("td", {
                        html: c
                    });
                    f.appendChild(d)
                }), d.appendChild(f)
            })), c && (null !== this.table.tHead && this.table.removeChild(this.table.tHead), b.append(this.table, c)), d && (this.table.tBodies.length && this.table.removeChild(this.table.tBodies[0]), b.append(this.table, d))
        },
        m = function() {};
    return m.prototype = {
        on: function(a, b) {
            this._events = this._events || {}, this._events[a] = this._events[a] || [], this._events[a].push(b)
        },
        off: function(a, b) {
            this._events = this._events || {}, a in this._events != !1 && this._events[a].splice(this._events[a].indexOf(b), 1)
        },
        emit: function(a) {
            if (this._events = this._events || {}, a in this._events != !1)
                for (var b = 0; b < this._events[a].length; b++) this._events[a][b].apply(this, Array.prototype.slice.call(arguments, 1))
        }
    }, m.mixin = function(a) {
        for (var b = ["on", "off", "emit"], c = 0; c < b.length; c++) "function" == typeof a ? a.prototype[b[c]] = m.prototype[b[c]] : a[b[c]] = m.prototype[b[c]];
        return a
    }, n.prototype.init = function(a) {
        if (this.initialized || b.hasClass(this.table, "dataTable-table")) return !1;
        var d = this;
        this.options = b.extend(this.options, a || {}), this.isIE = !!/(msie|trident)/i.test(navigator.userAgent), this.currentPage = 1, this.onFirstPage = !0, c.call(this), setTimeout(function() {
            d.emit("datatable.init"), d.initialized = !0
        }, 10)
    }, n.prototype.destroy = function() {
        this.options.sortable && b.each(this.tHead.rows[0].cells, function(a, b) {
            var c = b.firstElementChild.innerHTML;
            b.innerHTML = c, b.removeAttribute("style")
        }, this);
        var c = b.createFragment();
        b.each(this.rows, function(a, b) {
            c.appendChild(b)
        }, this), this.clear(c), b.removeClass(this.table, "dataTable-table"), this.wrapper.parentNode.replaceChild(this.table, this.wrapper), this.initialized = !1
    }, n.prototype.update = function() {
        f.call(this), g.call(this), this.links = [];
        for (var a = this.pages.length; a--;) {
            var c = a + 1;
            this.links[a] = b.button(0 === a ? "active" : "", c, c)
        }
        h.call(this), this.emit("datatable.update")
    }, n.prototype.search = function(a) {
        if (a = a.toLowerCase(), this.currentPage = 1, this.searching = !0, this.searchData = [], !a.length) return this.searching = !1, this.update(), this.emit("datatable.search", a, this.searchData), b.removeClass(this.wrapper, "search-results"), !1;
        this.clear(), b.each(this.rows, function(c, d) {
            var e = b.includes(this.searchData, d);
            a.split(" ").reduce(function(a, c) {
                return a && b.includes(d.textContent.toLowerCase(), c)
            }, !0) && !e && this.searchData.push(d)
        }, this), b.addClass(this.wrapper, "search-results"), this.searchData.length || (b.removeClass(this.wrapper, "search-results"), this.setMessage(this.options.labels.noRows)), this.update(), this.emit("datatable.search", a, this.searchData)
    }, n.prototype.page = function(a) {
        return a != this.currentPage && (isNaN(a) || (this.currentPage = parseInt(a, 10)), !(a > this.pages.length || a < 0) && (g.call(this), h.call(this), void this.emit("datatable.page", a)))
    }, n.prototype.sortColumn = function(a, c) {
        if (a < 1 || a > this.tHead.rows[0].cells.length) return !1;
        a -= 1;
        var d, e = this.searching ? this.searchData : this.rows,
            f = [],
            g = [],
            h = 0,
            j = 0,
            k = this.tHead.rows[0].cells[a];
        b.each(e, function(b, c) {
            var d = c.cells[a],
                e = d.textContent,
                i = e.replace(/(\$|\,|\s)/g, "");
            parseFloat(i) == i ? g[j++] = {
                value: Number(i),
                row: c
            } : f[h++] = {
                value: e,
                row: c
            }
        });
        var l, m;
        b.hasClass(k, "asc") || "asc" == c ? (l = i(f, -1), m = i(g, -1), d = "descending", b.removeClass(k, "asc"), b.addClass(k, "desc")) : (l = i(g, 1), m = i(f, 1), d = "ascending", b.removeClass(k, "desc"), b.addClass(k, "asc")), this.lastTh && k != this.lastTh && (b.removeClass(this.lastTh, "desc"), b.removeClass(this.lastTh, "asc")), this.lastTh = k, e = l.concat(m), this.searching ? (this.searchData = [], b.each(e, function(a, b) {
            this.searchData.push(b.row)
        }, this)) : (this.rows = [], b.each(e, function(a, b) {
            this.rows.push(b.row)
        }, this)), this.update(), this.emit("datatable.sort", a, d)
    }, n.prototype.addRows = function(a) {
        if ("[object Object]" !== Object.prototype.toString.call(a)) throw new Error("Function addRows: The method requires an object.");
        if (!a.rows) throw new Error("Function addRows: Your object is missing the 'rows' property.");
        var c = this;
        b.each(a.rows, function(a, d) {
            var e = b.createElement("tr");
            b.each(d, function(a, c) {
                var d = b.createElement("td", {
                    html: c
                });
                e.appendChild(d)
            }), c.rows.push(e)
        }), this.update()
    }, n.prototype.refresh = function() {
        this.options.searchable && (this.input.value = "", this.searching = !1), this.currentPage = 1, this.onFirstPage = !0, this.update(), this.emit("datatable.refresh")
    }, n.prototype.clear = function(a) {
        this.tbody && b.flush(this.tbody, this.isIE);
        var c = this.tbody;
        this.tbody || (c = this.table), a && ("string" == typeof a ? c.innerHTML = a : b.append(c, a))
    }, n.prototype.export = function(a, c, d, e, f) {
        var g = this,
            h = [],
            i = [];
        if ("csv" === a && h.push(this.tHead.rows[0]), f)
            if (b.isInt(f)) {
                var l = g.pages[f - 1];
                b.each(l, function(a, b) {
                    h.push(b)
                })
            } else b.isArray(f) && b.each(f, function(a, c) {
                c = g.pages[c - 1], b.each(c, function(a, b) {
                    h.push(b)
                })
            });
        else h = h.concat(this.rows);
        if (h.length) {
            if ("csv" === a) {
                var m, n, o;
                d = d || ",", e = e || "\n", b.each(h, function(a, c) {
                    o = 0, b.each(c.cells, function(a, b) {
                        o > 0 && i.push(d), i.push(b.textContent), o++
                    }), i.push(e)
                }), m = i.join(""), c = c || "datatable_export", c += ".csv", m.match(/^data:text\/csv/i) || (m = "data:text/csv;charset=utf-8," + m), m = encodeURI(m), n = b.createElement("a"), n.setAttribute("href", m), n.setAttribute("download", c), document.body.appendChild(n), n.click(), document.body.removeChild(n)
            }
            this.emit("datatable.export", a, h)
        }
    }, n.prototype.print = function() {
        var a = this.tHead.rows[0].cells,
            c = this.rows,
            d = b.createElement("table"),
            e = b.createElement("thead"),
            f = b.createElement("tbody"),
            g = b.createElement("tr");
        b.each(a, function(a, c) {
            g.appendChild(b.createElement("th", {
                html: c.textContent
            }))
        }), e.appendChild(g), b.each(c, function(a, c) {
            var d = b.createElement("tr");
            b.each(c.cells, function(a, c) {
                d.appendChild(b.createElement("td", {
                    html: c.textContent
                }))
            }), f.appendChild(d)
        }), d.appendChild(e), d.appendChild(f);
        var h = window.open();
        h.document.body.appendChild(d), h.print(), this.emit("datatable.print", d)
    }, n.prototype.setMessage = function(a) {
        var c = this.rows[0].cells.length;
        this.clear(b.createElement("tr", {
            html: '<td class="dataTables-empty" colspan="' + c + '">' + a + "</td>"
        }))
    }, n
});